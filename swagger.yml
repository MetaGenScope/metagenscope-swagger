openapi: 3.0.0

info:
  title: MetaGenScope Service
  description: Swagger spec for documenting the MetaGenScope service
  version: 0.12.0

servers:
  - url: https://www.metagenscope.com/api/v1
    description: Production server
  - url: https://staging.metagenscope.com/api/v1
    description: Staging server

security:
  - bearerAuth: []

paths:
  /auth/register:
    post:
      summary: Creates a new user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          $ref: '#/components/responses/AuthenticationResponse'

  /auth/login:
    post:
      summary: Logs a user in
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/AuthenticationResponse'

  /auth/status:
    get:
      summary: Returns the logged in user's status
      responses:
        '200':
          description: The current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /auth/logout:
    get:
      summary: Logs a user out
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object

  /organizations:
    get:
      summary: Returns list of Organizations
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: List of Organizations
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Organization'
    post:
      summary: Create an Organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: LongtailBio
                email:
                  type: string
                  example: dev@longtailbio.com
      responses:
        '201':
          description: Newly created Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      required:
        - username
        - email
      properties:
        uuid:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
        user_type:
          type: string
          enum: [ "user", " organization" ]
        is_deleted:
          type: boolean
        is_fake:
          type: boolean
        created_at:
          type: string
          format: date-time
      example:
        uuid: '44edfe3f-6c0f-40f9-9fa6-6d3265bce43d'
        username: bchrobot
        email: ben@longtailbio.com
        user_type: user
        is_deleted: false
        is_fake: false
        created_at: "2018-11-13T16:34:25.382Z"
    Organization:
      allOf:
        - $ref: '#/components/schemas/User'
      example:
        uuid: '44edfe3f-6c0f-40f9-9fa6-6d3265bce43d'
        username: ExampleOrganization
        email: admin@organization.org
        user_type: organization
        is_deleted: false
        is_fake: false
        created_at: "2018-11-13T16:34:25.382Z"

  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before starting to collect the result set.
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return.

  responses:
    AuthenticationResponse:
      description: JWT Response
      content:
        application/json:
          schema:
            type: object
            properties:
              auth_token:
                type: string
                format: JWT
